/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsISupports.idl"

// TODO Use error codes that are locally defined (in the interface), instead of nsresult.
// e.g. const short in nsIPrincipal.idl

[scriptable, function, uuid(54f7a9d9-8bd1-4442-8005-45c5becb1205)]
interface nsIHidDisconnectCallback : nsISupports {
  void callback(in nsresult aStatus);
};

[scriptable, function, uuid(b2ee57cc-2a3c-4c98-ae01-0304bc6e0e9f)]
interface nsIHidReceiveCallback : nsISupports {
  void callback(in nsresult aStatus,
                in long aReportId,
                [const, array, size_is(aLen)] in octet aData,
                in unsigned long aLen);
};

[scriptable, function, uuid(2d7b3c26-e88f-4160-9e70-9f8ea35b0707)]
interface nsIHidSendCallback : nsISupports {
  void callback(in nsresult aStatus);
};

[scriptable, function, uuid(5172ae73-3f9b-4c27-812e-74f70a1f46f2)]
interface nsIHidReceiveFeatureReportCallback : nsISupports {
  void callback(in nsresult aStatus,
                // TODO chrome includes the reportId in aData (?)
                in long aReportId,
                [const, array, size_is(aLen)] in octet aData,
                in unsigned long aLen);
};

[scriptable, function, uuid(a41e3a81-e38e-4f08-911b-1e032dcbdf94)]
interface nsIHidSendFeatureReportCallback : nsISupports {
  void callback(in nsresult aStatus);
};

[scriptable, uuid(9ba6015d-4154-43c1-bba7-e7a7ccf36474)]
interface nsIHidConnection : nsISupports
{
  void disconnect(in nsIHidDisconnectCallback aCallback);

  void receive(in nsIHidReceiveCallback aCallback);

  void send(in long aReportId,
            [const, array, size_is(aLen)] in octet aData,
            in unsigned long aLen,
            in nsIHidSendCallback aCallback);

  void receiveFeatureReport(in long aReportId,
                            in nsIHidReceiveFeatureReportCallback aCallback);

  void sendFeatureReport(in long aReportId,
                         [const, array, size_is(aLen)] in octet aData,
                         in unsigned long aLen,
                         in nsIHidSendFeatureReportCallback aCallback);
};

